<?php

/**
 * @file
 * Contains sitecommander.module
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\sitecommander\Controller\BackupController;

/**
 * Theme hook
 */

function sitecommander_theme($existing, $type, $theme, $path) {

	$variables = array(
		'sitecommander' => array(
			'variables' => array(
				'drupalInfo' => null
			),
			'title' => 'SiteCommander',
			'template' => 'block--sitecommander',
		),
	);

	return $variables;

}

/**
 * Called after cache has been cleared so we can store the timestamp for reporting purposes in SiteCommander
 */

function sitecommander_rebuild() {
	// Store the current timestamp in state variables
	\Drupal::state()->set('sitecommander.timestamp_cache_last_rebuild', time());
	\Drupal::state()->set('sitecommander.timestamp_cssjs_last_rebuild', time());
}

/**
 * Cron hook
 */

function sitecommander_cron() {

	// Handle Backup Manager archive retention strategy
	$backupDirectory = \Drupal::config('sitecommander.settings')->get('backupDirectory');
	$maxAge = \Drupal::config('sitecommander.settings')->get('backupMaxAgeInDays');

	$cutOff = strtotime($maxAge . ' days ago');

	$fileList = BackupController::scScanDir($backupDirectory, 'ctime', 1);

	if(isset($fileList) && count($fileList) > 0)
	{
		foreach($fileList as $fileName => $fileInfo)
		{
			if($cutOff > $fileInfo['ctime'])
			{
				@unlink($backupDirectory . '/' . $fileName);
			}
		}
	}

}

/**
 * page_attachments hook
 *
 * Ensure Bootstrap .js is only loaded once, otherwise modals won't work right.
 */

function sitecommander_page_attachments( &$attachments )
{
}

function sitecommander_library_info_alter(&$libraries, $extension)
{
}
